# config/nav2_params.yaml
amcl:
  ros__parameters:
    use_sim_time: true
    alpha1: 0.2
    alpha2: 0.2
    alpha3: 0.2
    alpha4: 0.2
    alpha5: 0.2
    base_frame_id: base_link
    global_frame_id: map
    odom_frame_id: odom
    scan_topic: scan
    min_particles: 500
    max_particles: 2000
    set_initial_pose: true
    update_min_a: 0.2
    update_min_d: 0.25
    resample_interval: 1
    laser_model_type: likelihood_field
    z_hit: 0.5
    z_short: 0.05
    z_max: 0.05
    z_rand: 0.5
    sigma_hit: 0.2
    lambda_short: 0.1
    tf_broadcast: true

map_server:
  ros__parameters:
    use_sim_time: true
    yaml_filename: ""   # set by launch arg

# Planner (Smac 2D for grids; robust and smooth)
planner_server:
  ros__parameters:
    use_sim_time: true
    expected_planner_frequency: 5.0
    planner_plugins: ["GridBased"]
    GridBased:
      plugin: "nav2_smac_planner::SmacPlanner2D"
      tolerance: 0.5
      downsample_costmap: false
      allow_unknown: true
      max_iterations: 10000
      max_on_approach_iterations: 1000
      motion_model_for_search: "MOORE"
      cost_travel_multiplier: 1.0
      cache_obstacle_heuristic: true
      smoother:
        max_curvature: 1.0

# Controller (Regulated Pure Pursuit; great for diff-drive + lidar)
controller_server:
  ros__parameters:
    use_sim_time: true
    controller_plugins: ["FollowPath"]
    FollowPath:
      plugin: "nav2_regulated_pure_pursuit_controller::RegulatedPurePursuitController"
      desired_linear_vel: 0.35
      min_linear_velocity: 0.05
      max_linear_accel: 0.6
      max_angular_accel: 1.5
      lookahead_dist: 0.6
      min_lookahead_dist: 0.3
      max_lookahead_dist: 0.9
      lookahead_time: 1.5
      transform_tolerance: 0.2
      use_velocity_scaled_lookahead_dist: true
      regulate_turning_velocity: true
      allow_reversing: false
      use_rotate_to_heading: true
      rotate_to_heading_angular_vel: 0.8
      max_robot_pose_search_dist: 10.0

# Smoother (optional but recommended)
smoother_server:
  ros__parameters:
    use_sim_time: true
    smoother_plugins: ["simple_smoother"]
    simple_smoother:
      plugin: "nav2_smoother::SimpleSmoother"
      tolerance: 1.0
      max_its: 1000
      w_data: 0.2
      w_smooth: 0.3

# Behavior Tree Navigator
bt_navigator:
  ros__parameters:
    use_sim_time: true
    global_frame: map
    robot_base_frame: base_link
    default_bt_xml_filename: "package://nav2_bt_navigator/behavior_trees/navigate_w_replanning_and_recovery.xml"
    plugin_lib_names:
      - nav2_compute_path_to_pose_action_bt_node
      - nav2_follow_path_action_bt_node
      - nav2_back_up_action_bt_node
      - nav2_spin_action_bt_node
      - nav2_wait_action_bt_node
      - nav2_clear_costmap_service_bt_node
      - nav2_is_path_valid_condition_bt_node
      - nav2_goal_reached_condition_bt_node
      - nav2_goal_updater_node
      - nav2_reinitialize_global_localization_service_bt_node
      - nav2_rate_controller_bt_node
      - nav2_distance_controller_bt_node
      - nav2_single_trigger_bt_node
      - nav2_pipeline_sequence_bt_node
      - nav2_round_robin_node
      - nav2_transform_available_condition_bt_node

waypoint_follower:
  ros__parameters:
    use_sim_time: true
    loop_rate: 20
    stop_on_failure: false
    waypoint_task_executor_plugin: "wait_at_waypoint"
    wait_at_waypoint:
      plugin: "nav2_waypoint_follower::WaitAtWaypoint"
      enabled: true
      waypoint_pause_duration: 0.0

# Lifecycle manager to bring nodes up automatically
lifecycle_manager:
  ros__parameters:
    use_sim_time: true
    autostart: true
    node_names:
      - map_server
      - amcl
      - controller_server
      - planner_server
      - smoother_server
      - bt_navigator
      - waypoint_follower

# Costmaps (shared params for global/local)
# Global costmap
global_costmap:
  ros__parameters:
    use_sim_time: true
    global_frame: map
    robot_base_frame: base_link
    update_frequency: 5.0
    publish_frequency: 2.0
    resolution: 0.05
    track_unknown_space: true
    rolling_window: false
    plugins: ["obstacle_layer", "inflation_layer"]
    obstacle_layer:
      plugin: "nav2_costmap_2d::ObstacleLayer"
      enabled: true
      observation_sources: scan
      scan:
        topic: scan
        max_obstacle_height: 2.0
        clearing: true
        marking: true
        obstacle_max_range: 5.0
        raytrace_max_range: 8.0
    inflation_layer:
      plugin: "nav2_costmap_2d::InflationLayer"
      inflation_radius: 0.6
      cost_scaling_factor: 3.0
    robot_radius: 0.3

# Local costmap
local_costmap:
  ros__parameters:
    use_sim_time: true
    global_frame: odom
    robot_base_frame: base_link
    update_frequency: 10.0
    publish_frequency: 5.0
    rolling_window: true
    width: 4.0
    height: 4.0
    resolution: 0.05
    plugins: ["obstacle_layer", "inflation_layer"]
    obstacle_layer:
      plugin: "nav2_costmap_2d::ObstacleLayer"
      enabled: true
      observation_sources: scan
      scan:
        topic: scan
        max_obstacle_height: 2.0
        clearing: true
        marking: true
        obstacle_max_range: 4.0
        raytrace_max_range: 6.0
    inflation_layer:
      plugin: "nav2_costmap_2d::InflationLayer"
      inflation_radius: 0.5
      cost_scaling_factor: 3.0
    robot_radius: 0.3
